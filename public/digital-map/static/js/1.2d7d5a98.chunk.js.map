{"version":3,"sources":["pages/HomePage/ViewInsight.tsx","pages/HomePage/LeftNav/DropDownListComponent.tsx","styles-components/SearchBar.tsx","pages/HomePage/AllSearch.tsx","pages/HomePage/LeftNav/LeftNavComponent.tsx","styles-components/Cards.tsx","styles-components/Badge.tsx"],"names":["ViewInsight","props","query","useWebQuery","history","useHistory","React","id","value","state","setState","selectedState","length","Math","random","className","style","textTransform","colorTheme","onClick","url","viewInsightUrl","get","push","navigate","override","css","SearchWrapper","styled","div","theme","dropDown","searchBackground","searchBorder","color","Input","input","DropDownListComponent","originalData","handleClick","accessor","selectedItem","handleApplyClick","loading","handleClearClick","dropDownId","noSort","useContext","ThemeContext","useState","data","setData","searchQuery","setSearchQuery","tempSelectedItem","setTempSelectedItem","findSelectedState","dataObj","find","item","list","map","index","noData","Boolean","useEffect","sort","a","b","localeCompare","marginTop","type","onChange","changeEvent","changedValue","target","filteredList","filter","toLowerCase","includes","onKeyUp","e","keyCode","prev","document","getElementById","scrollIntoView","behavior","placeholder","size","fontSize","fontFamily","Button","border","cancelBorder","backgroundColor","cancel","cancelColor","noBorder","data-bs-toggle","data-bs-target","toString","marginLeft","ThemeColorIdentifier","memo","SearchBarWrapper","colorCards","bgCards","shadowCards","SearchBarInput","sideSearch","SpanIcon","span","Badges","borderRadius","padding","width","fontWeight","transition","active","themeColor","background","NoDataMessage","ScrollableDiv","overflowX","overflowY","cursor","height","display","boxShadow","Hr","TYPES","Selector","label","obj","activeId","findIndex","i","toUpperCase","VeriticallyScrollableDiv","minHeight","maxHeight","SearchBar","searchBarExpanded","actions","filterState","setSearchBarExpanded","setAppliedFilters","handleSectorClick","onApplySector","handleStagesClick","onApplyStages","handleIndustryClick","onApplyIndustry","appliedFilters","searchText","setSearchText","activeFilterType","setActiveFilterType","allTypeDisplayLimit","setAllTypeDisplayLimit","applyState","applyStages","stage","currentStages","stages","splice","array","applySector","sector","currentSectors","sectors","applyIndustry","industry","currentIndustries","industries","states","slice","marginBottom","aria-label","aria-describedby","name","handleTabClick","ResetButton","button","justifyContent","alignItems","resetButton","Accordion","MaterialStyled","disableGutters","elevation","square","palette","divider","mode","borderBottom","paddingLeft","paddingRight","AccordionSummary","expandIcon","sx","flexDirection","paddingBottom","transform","marginRight","margin","AccordionDetails","MuiAccordionDetails","DropDown","LeftNavComponent","setSelectedArea","selectedArea","tagsResources","fetchFilterList","filterLoading","noShadow","insight","searchVisible","search","dateRange","dateRangeState","dateRangeLoading","setSelectedState","handleToggle","setStateViewMode","expanded","setExpanded","selectedSector","setSelectedSector","selectedStages","setSelectedStages","selectedIndustry","setSelectedIndustry","selectedBadges","setSelectedBadges","useQuery","HomePageApi","badges","findSelectedIndex","handleStateClick","closeModal","onApplyState","stateIdsForAPiRequest","Array","forEach","prevState","area","stateName","sectorObj","sectorIndex","newSectors","sectorIdsForAPiRequest","stagesIndex","newStages","stagesIdsForApiRequest","industryIndex","newIndustry","handleChange","panel","event","newExpanded","isResetFilterVisible","position","top","zIndex","href","rel","src","alt","aria-controls","MapVariables","badgesIndex","newsBadges","badgesIdsForApiRequest","Card","showCaseStartUpBorder","Badge","bgBadge","RoundedBadge","hidden"],"mappings":"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","file":"static/js/1.2d7d5a98.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useWebQuery } from \"../../hooks/useWebQuery\";\r\n// import { baseRoute } from \"../../routes/publicRoutes\";\r\nimport \"../../scss/HomePageStyles/leftNavComponent.scss\";\r\nimport { Button } from \"../../styles-components/Button\";\r\nimport { Card } from \"../../styles-components/Cards\";\r\n\r\ninterface ViewInsight {\r\n  viewInsightUrl: string;\r\n  colorTheme: string;\r\n}\r\n\r\nexport default function ViewInsight(props: any) {\r\n  const query = useWebQuery();\r\n  const history = useHistory();\r\n  const [state, setState] = React.useState<any>({ id: \"\", value: \"\" });\r\n\r\n  const navigate = () => {\r\n    const url =\r\n      props.selectedState && props.selectedState[0]\r\n        ? `/maps` + props.viewInsightUrl\r\n        : `/maps/view-insight?id=${\r\n            query.get(\"id\") ? query.get(\"id\") : \"India\"\r\n          }&state=${query.get(\"state\") ? query.get(\"state\") : \"India\"}`;\r\n    history.push(url);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.selectedState && props.selectedState.length > 0) {\r\n      let { selectedState } = props;\r\n      setState(selectedState[0]);\r\n    }\r\n    else {\r\n      setState({ id: \"\", value: \"\" });\r\n    }                                                                                                 \r\n  }, [props.selectedState]);\r\n  let ran = Math.random();\r\n\r\n  return (\r\n    <div className=\"left-side-nav-styles\">\r\n      <Card className=\"left-nav-bottom-card row pt-3 pb-0\">\r\n        <h6\r\n          className=\"px-0 card-heading-left-bottom\"\r\n          style={{ textTransform: \"uppercase\" }}\r\n        >\r\n          {`VIEW STARTUP ECOSYSTEM INSIGHTS OF ${\r\n            state && state.value != \"\" ? state.value : \"INDIA\"\r\n          }`}\r\n        </h6>\r\n        <span className=\"sub-heading px-0 mb-2 font-500\">\r\n          You can View Insights of{\" \"}\r\n          {state && state.value != \"\" ? state.value : \"India\"}\r\n        </span>\r\n        <div className=\"btn-view-project mx-0 px-0\">\r\n          {/* <Link to={url}>\r\n            <Button colorTheme={props.colorTheme} className=\"background-color-theme\">View Insights</Button>\r\n          </Link> */}\r\n          <Button\r\n            colorTheme={props.colorTheme}\r\n            onClick={() => navigate()}\r\n            className=\"background-color-theme\"\r\n          >\r\n            View Insights\r\n          </Button>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import { css } from \"@emotion/react\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { GoSearch } from \"react-icons/go\";\r\nimport MoonLoader from \"react-spinners/MoonLoader\";\r\nimport styled from \"styled-components\";\r\nimport { ThemeContext } from \"../../../config/context\";\r\nimport { ThemeColorIdentifier } from \"../../../helper-function/themeColor\";\r\nimport \"../../../scss/HomePageStyles/dropDownListComponent.scss\";\r\nimport { Button } from \"../../../styles-components/Button\";\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nconst SearchWrapper = styled.div`\r\n  background: ${(props) => props.theme.dropDown.searchBackground} !important;\r\n  border: 1px solid ${(props) => props.theme.dropDown.searchBorder} !important;\r\n  color: ${(props) => props.theme.color} !important;\r\n`;\r\nconst Input = styled.input`\r\n  background: ${(props) => props.theme.dropDown.searchBackground} !important;\r\n  color: ${(props) => props.theme.color} !important;\r\n`;\r\n\r\nconst DropDownListComponent = (props: any) => {\r\n  let {\r\n    originalData,\r\n    accessor,\r\n    handleClick,\r\n    selectedItem,\r\n    handleApplyClick,\r\n    loading,\r\n    handleClearClick,\r\n    dropDownId,\r\n    noSort,\r\n    colorTheme,\r\n  } = props;\r\n\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const [data, setData] = useState<any>([]);\r\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\r\n  const [tempSelectedItem, setTempSelectedItem] = useState<number>(-1);\r\n\r\n  const findSelectedState = (dataObj: any) =>\r\n    selectedItem.find((item: any) => item.id === dataObj.id);\r\n\r\n  const bgUnSelected = () => {\r\n    if (theme.theme === \"dark\") return \"unselected-list-card-dark\";\r\n    if (theme.theme === \"light\") return \"unselected-list-card-light\";\r\n  };\r\n\r\n  const list: any[] = data.map((dataObj: any, index:number) => {\r\n    return (\r\n      <div\r\n        key={dataObj.id}\r\n        onClick={() => handleClick(dataObj)}\r\n        id={dataObj.id}\r\n        className={`list-card me-2 ${\r\n          findSelectedState(dataObj) ? \"selected-list-card\" : bgUnSelected()\r\n        } ${tempSelectedItem === index ? \"list-card-color\" : \"\"}`}\r\n      >\r\n        <h5 className=\"m-0 p-0\">{dataObj[\"value\"]}</h5>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const noData: boolean = Boolean(data.length === 0 && !loading);\r\n\r\n  const onSearch = (changeEvent: any) => {\r\n    const changedValue: string = changeEvent.target.value;\r\n    setSearchQuery(changedValue);\r\n    const filteredList: any[] = originalData.filter((item: any) =>\r\n      item[\"value\"].toLowerCase().includes(changedValue.toLowerCase())\r\n    );\r\n    setData(filteredList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (noSort) {\r\n      setData(originalData);\r\n    } else {\r\n      const sort = originalData.sort((a: any, b: any) =>\r\n        a.value.localeCompare(b.value)\r\n      );\r\n      setData(sort);\r\n    }\r\n  }, [originalData.length, loading]);\r\n\r\n  const onKeyUp = (e: any) => {\r\n    const keyCode = e.keyCode;\r\n\r\n    if (keyCode === 40) {\r\n\r\n      setTempSelectedItem((prev) => {\r\n        document\r\n          .getElementById(data[prev === data.length - 1 ? 0 : prev + 1]?.id)\r\n          ?.scrollIntoView({ behavior: \"smooth\" });\r\n        return prev === data.length - 1 ? 0 : prev + 1;\r\n      });\r\n    }\r\n    if (keyCode === 38) {\r\n      setTempSelectedItem((prev) => {\r\n        document\r\n        .getElementById(data[prev === 0 ? data.length - 1 : prev - 1]?.id)\r\n        ?.scrollIntoView({ behavior: \"smooth\" });\r\n        return (prev === 0 ? data.length - 1 : prev - 1)\r\n      }\r\n      \r\n      );\r\n    }\r\n    if (keyCode === 13) {\r\n      handleClick(data[tempSelectedItem]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"drop-down-list-component\">\r\n      <SearchWrapper\r\n        className={`state-search-bar me-3`}\r\n        style={{ marginTop: \"6px\" }}\r\n      >\r\n        <div className=\"d-flex\">\r\n          <span className=\"btn my-0 me-0 pe-0\" style={{ color: theme.color }}>\r\n            <GoSearch />\r\n          </span>\r\n          <Input\r\n            type=\"text\"\r\n            value={searchQuery}\r\n            onChange={onSearch}\r\n            onKeyUp={onKeyUp}\r\n            className={`ms-0 form-control me-3 border-0 shadow-none f-400 font-Mont`}\r\n            placeholder=\"Search\"\r\n          />\r\n        </div>\r\n      </SearchWrapper>\r\n\r\n      <div className=\"state-container\">\r\n        {loading ? (\r\n          <div className=\"w-100 h-100 d-flex justify-content-center align-items-center\">\r\n            <MoonLoader\r\n              color={\"#0177FA\"}\r\n              loading={loading}\r\n              size={\"25px\"}\r\n              css={override}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <div\r\n          className={`d-flex flex-column justify-content-center align-items-center ${\r\n            noData && \"h-100\"\r\n          }`}\r\n        >\r\n          {noData ? (\r\n            <p\r\n              className=\"p-0 m-0\"\r\n              style={{ fontSize: \"14px\", fontFamily: \"Poppins\" }}\r\n            >\r\n              No Data Found\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        {list}\r\n        {/* {data.length && !loading ?  : \"\"} */}\r\n      </div>\r\n      <div className=\"my-3 mt-2 d-flex justify-content-between me-3\">\r\n        <Button\r\n          colorTheme={colorTheme}\r\n          border={`2px solid ${theme.dropDown.cancelBorder}`}\r\n          backgroundColor={theme.dropDown.cancel}\r\n          color={theme.dropDown.cancelColor}\r\n          noBorder={true}\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear\r\n        </Button>\r\n        <Button\r\n          colorTheme={colorTheme}\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target={dropDownId.toString()}\r\n          marginLeft={\"12px\"}\r\n          backgroundColor={ThemeColorIdentifier(colorTheme)}\r\n          onClick={handleApplyClick}\r\n        >\r\n          Apply\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(DropDownListComponent);\r\n","import styled from \"styled-components\"\r\n\r\nexport const SearchBarWrapper = styled.div`\r\n  color: ${(props) => props.theme.colorCards} !important;\r\n  background: ${(props) => props.theme.bgCards} !important;\r\n  box-shadow: ${(props) => props.theme.shadowCards} !important;\r\n`;\r\n\r\nexport const SearchBarInput = styled.input`\r\n  color: ${(props) => props.theme.sideSearch.color} !important;\r\n  background: ${(props) => props.theme.bgCards} !important;\r\n`;\r\n\r\nexport const SpanIcon = styled.span`\r\n  color: ${(props) => props.theme.color};\r\n  margin-top: 1.4px !important;\r\n`;\r\n","import * as React from \"react\";\r\nimport { BiSearchAlt2 } from \"react-icons/bi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled, { ThemeContext } from \"styled-components\";\r\nimport { ThemeColorIdentifier } from \"../../helper-function/themeColor\";\r\nimport {\r\n  SearchBarInput,\r\n  SearchBarWrapper,\r\n  SpanIcon,\r\n} from \"../../styles-components/SearchBar\";\r\n\r\nexport interface SearchBarTypes {\r\n  filterState: any;\r\n  setSearchBarExpanded: any;\r\n  colorTheme: string;\r\n  searchBarExpanded: boolean;\r\n  actions: any;\r\n}\r\n\r\nconst Badges = styled.div<any>(\r\n  {\r\n    borderRadius: \"20px\",\r\n    padding: \"0.5rem 1rem 0.5rem 1rem\",\r\n    width: \"fit-content\",\r\n    fontFamily: \"Poppins\",\r\n    fontWeight: \"600\",\r\n    transition: \"All 0.3s\",\r\n    fontSize: \"12px\",\r\n  },\r\n  (props) => {\r\n    return {\r\n      transition: \"All 0.3s\",\r\n      color: props.active ? \"white\" : props.themeColor,\r\n      background: props.active\r\n        ? ThemeColorIdentifier(props.colorTheme)\r\n        : props.theme,\r\n    };\r\n  }\r\n);\r\n\r\nfunction NoDataMessage() {\r\n  const theme = React.useContext(ThemeContext);\r\n  return (\r\n    <div\r\n      className=\"d-flex flex-column justify-content-center align-items-center text-muted opacity-5 h-100 transition\"\r\n      style={{ color: theme.sideSearch.color }}\r\n    >\r\n      No Result Found.\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ScrollableDiv = styled.div({\r\n  width: \"100%\",\r\n  overflowX: \"scroll\",\r\n  overflowY: \"hidden\",\r\n  cursor: \"pointer\",\r\n  \"&::-webkit-scrollbar\": {\r\n    height: \"5px\",\r\n    display: \"none\",\r\n  },\r\n  \"&::-webkit-scrollbar-track\": {\r\n    boxShadow: \"inset 0 0 0px grey\",\r\n    borderRadius: \"10px\",\r\n    height: \"45px\",\r\n  },\r\n  \"&::-webkit-scrollbar-thumb\": {\r\n    background: \"#c4c4c4\",\r\n    borderRadius: \"7px\",\r\n  },\r\n});\r\n\r\nconst Hr = styled.div({\r\n  width: \"100%\",\r\n  height: \"1px\",\r\n  background: \"#DDDDDD\",\r\n});\r\n\r\nconst TYPES = [\"All\", \"Sectors\", \"States\", \"Industries\", \"Stages\"];\r\n\r\ninterface SelectorType {\r\n  label: string;\r\n  type: string;\r\n  onClick?: any;\r\n  obj: any;\r\n  active: any[];\r\n}\r\n\r\nfunction Selector({ label, type, obj, onClick, active }: SelectorType) {\r\n  const activeId = active.findIndex((i) => i === obj.id);\r\n  const theme = React.useContext(ThemeContext);\r\n  return (\r\n    <div\r\n      onClick={() => onClick(obj)}\r\n      style={{ color: theme.sideSearch.color }}\r\n      className={`d-flex justify-content-between transition text-hover ${\r\n        activeId !== -1 ? \"text-primary\" : \"\"\r\n      }`}\r\n    >\r\n      <p className=\"font-500 font-14px transition text-hover\">{label}</p>\r\n      <p className=\"opacity-5 font-14px\">{type.toUpperCase()}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface KeyValuePair {\r\n  id: string;\r\n  value: string;\r\n}\r\n\r\nconst VeriticallyScrollableDiv = styled.div({\r\n  minHeight: \"100px\",\r\n  maxHeight: \"400px\",\r\n  overflowY: \"scroll\",\r\n  overflowX: \"hidden\",\r\n  \"&::-webkit-scrollbar\": {\r\n    width: \"5px\",\r\n    display: \"none\",\r\n  },\r\n  \"&::-webkit-scrollbar-track\": {\r\n    boxShadow: \"inset 0 0 0px grey\",\r\n    borderRadius: \"10px\",\r\n    height: \"45px\",\r\n  },\r\n  \"&::-webkit-scrollbar-thumb\": {\r\n    background: \"#c4c4c4\",\r\n    borderRadius: \"7px\",\r\n  },\r\n});\r\n\r\nexport default function SearchBar({\r\n  searchBarExpanded,\r\n  actions,\r\n  filterState,\r\n  colorTheme,\r\n  setSearchBarExpanded,\r\n}: SearchBarTypes) {\r\n  const {\r\n    handleSectorClick,\r\n    onApplySector,\r\n    handleStagesClick,\r\n    onApplyStages,\r\n    handleIndustryClick,\r\n    onApplyIndustry,\r\n    setAppliedFilters,\r\n    appliedFilters,\r\n  } = actions;\r\n  const [searchText, setSearchText] = React.useState<string>(\"\");\r\n  const [activeFilterType, setActiveFilterType] = React.useState<string>(\r\n    TYPES[0]\r\n  );\r\n  const history = useHistory();\r\n  const theme = React.useContext(ThemeContext);\r\n  const [allTypeDisplayLimit, setAllTypeDisplayLimit] = React.useState(3);\r\n\r\n  const applyState = (state: any) =>\r\n    history.push(`/maps/?id=${state.id}&state=${state.value}`);\r\n\r\n  const applyStages = (stage: any) =>\r\n    setAppliedFilters((prev: any) => {\r\n      const currentStages = [...prev.stages];\r\n      const index = findIndex(currentStages, stage.id);\r\n      if (index === -1) currentStages.push(stage.id);\r\n      else currentStages.splice(index, 1);\r\n      return { ...prev, stages: currentStages };\r\n    });\r\n\r\n  const findIndex = (array: any[], id: string) =>\r\n    array.findIndex((i: any) => i === id);\r\n\r\n  const applySector = (sector: any) =>\r\n    setAppliedFilters((prev: any) => {\r\n      const currentSectors = [...prev.sectors];\r\n      const index = findIndex(currentSectors, sector.id);\r\n      if (index === -1) currentSectors.push(sector.id);\r\n      else currentSectors.splice(index, 1);\r\n      return { ...prev, sectors: currentSectors };\r\n    });\r\n\r\n  const applyIndustry = (industry: any) =>\r\n    setAppliedFilters((prev: any) => {\r\n      const currentIndustries = [...prev.industries];\r\n      const index = findIndex(currentIndustries, industry.id);\r\n      if (index === -1) currentIndustries.push(industry.id);\r\n      else currentIndustries.splice(index, 1);\r\n      return { ...prev, industries: currentIndustries };\r\n    });\r\n\r\n  const handleSearchTextChange = (changeEvent: any) => {\r\n    const value = changeEvent.target.value;\r\n    setSearchBarExpanded(value.length > 0);\r\n    setSearchText(value);\r\n  };\r\n\r\n  const states = filterState.states\r\n    .filter(\r\n      (i: KeyValuePair) =>\r\n        i.value.toLowerCase().includes(searchText.toLowerCase()) ||\r\n        i.id == searchText\r\n    )\r\n    .slice(0, allTypeDisplayLimit)\r\n    .sort((a: KeyValuePair, b: KeyValuePair) => a.value.localeCompare(b.value));\r\n\r\n  const sectors = filterState.sectors\r\n    .filter(\r\n      (i: KeyValuePair) =>\r\n        i.value.toLowerCase().includes(searchText.toLowerCase()) ||\r\n        i.id == searchText\r\n    )\r\n    .slice(0, allTypeDisplayLimit)\r\n    .sort((a: KeyValuePair, b: KeyValuePair) => a.value.localeCompare(b.value));\r\n\r\n  const industries = filterState.industries\r\n    .filter(\r\n      (i: KeyValuePair) =>\r\n        i.value.toLowerCase().includes(searchText.toLowerCase()) ||\r\n        i.id == searchText\r\n    )\r\n    .slice(0, allTypeDisplayLimit)\r\n    .sort((a: KeyValuePair, b: KeyValuePair) => a.value.localeCompare(b.value));\r\n  const stages = filterState.stages\r\n    .filter(\r\n      (i: KeyValuePair) =>\r\n        i.value.toLowerCase().includes(searchText.toLowerCase()) ||\r\n        i.id == searchText\r\n    )\r\n    .slice(0, allTypeDisplayLimit)\r\n    .sort((a: KeyValuePair, b: KeyValuePair) => a.value.localeCompare(b.value));\r\n\r\n  const handleTabClick = (name: string) => {\r\n    if (name === \"All\") setAllTypeDisplayLimit(3);\r\n    else setAllTypeDisplayLimit(filterState[name.toLowerCase()].length);\r\n    setActiveFilterType(name);\r\n  };\r\n\r\n  const showMoreData = () => setAllTypeDisplayLimit((prev) => prev + 3);\r\n  return (\r\n    <div\r\n      className=\"row search-bar-row\"\r\n      style={{\r\n        boxShadow: \"0px 0px 10px rgb(193 193 193 / 25%)\",\r\n        background: theme.sideSearch.background,\r\n      }}\r\n    >\r\n      <SearchBarWrapper className=\"rounded h-100 d-flex mx-0 px-0 search-bar\">\r\n        <SpanIcon\r\n          className=\"btn shadow-none border-0 m-0 pe-1 ps-4 \"\r\n          id=\"search-addon\"\r\n        >\r\n          <BiSearchAlt2 size={17.06} style={{ marginBottom: \"3px\" }} />\r\n        </SpanIcon>\r\n        <SearchBarInput\r\n          type=\"search\"\r\n          value={searchText}\r\n          className=\"form-control ps-2\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n          aria-describedby=\"search-addon\"\r\n          onChange={handleSearchTextChange}\r\n        />\r\n      </SearchBarWrapper>\r\n      {searchBarExpanded ? (\r\n        <ScrollableDiv\r\n          className=\"d-inline-flex p-3 py-2\"\r\n          style={{ background: theme.sideSearch.background }}\r\n        >\r\n          {TYPES.map((name) => (\r\n            <Badges\r\n              theme={theme.sideSearch.background}\r\n              themeColor={theme.sideSearch.color}\r\n              colorTheme={colorTheme}\r\n              onClick={() => handleTabClick(name)}\r\n              active={activeFilterType === name}\r\n            >\r\n              {name}\r\n            </Badges>\r\n          ))}\r\n        </ScrollableDiv>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {searchBarExpanded ? (\r\n        <div className=\"px-3\">\r\n          <Hr />\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {searchBarExpanded && activeFilterType === TYPES[0] ? (\r\n        <VeriticallyScrollableDiv\r\n          className=\"px-3\"\r\n          style={{ background: theme.sideSearch.background }}\r\n        >\r\n          <div\r\n            className=\"pt-3\"\r\n            style={{ background: theme.sideSearch.background }}\r\n          >\r\n            {states.map((i: any) => (\r\n              <Selector\r\n                obj={i}\r\n                label={i.value}\r\n                active={appliedFilters.states}\r\n                onClick={applyState}\r\n                type=\"State\"\r\n                key={i.id}\r\n              />\r\n            ))}\r\n          </div>\r\n\r\n          {states.length === 0 ? <></> : <Hr />}\r\n          <div\r\n            className=\"pt-3\"\r\n            style={{ background: theme.sideSearch.background }}\r\n          >\r\n            {sectors.map((i: any) => (\r\n              <Selector\r\n                obj={i}\r\n                label={i.value}\r\n                active={appliedFilters.sectors}\r\n                onClick={applySector}\r\n                type=\"Sectors\"\r\n                key={i.id}\r\n              />\r\n            ))}\r\n          </div>\r\n          {sectors.length === 0 ? <></> : <Hr />}\r\n          <div\r\n            className=\"pt-3\"\r\n            style={{ background: theme.sideSearch.background }}\r\n          >\r\n            {industries.map((i: any) => (\r\n              <Selector\r\n                obj={i}\r\n                label={i.value}\r\n                active={appliedFilters.industries}\r\n                onClick={applyIndustry}\r\n                type=\"Industries\"\r\n                key={i.id}\r\n              />\r\n            ))}\r\n          </div>\r\n          {states.length > allTypeDisplayLimit ||\r\n          sectors.length > allTypeDisplayLimit ||\r\n          industries.length > allTypeDisplayLimit ? (\r\n            <p\r\n              className=\"text-primary cursor-pointer text-center font-600 font-12px font-Mont\"\r\n              onClick={showMoreData}\r\n            >\r\n              View More&gt;&gt;\r\n            </p>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </VeriticallyScrollableDiv>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      {searchBarExpanded && activeFilterType === \"Sectors\" ? (\r\n        <VeriticallyScrollableDiv className=\"pt-3 px-3\">\r\n          {sectors.length === 0 ? <NoDataMessage /> : <></>}\r\n          {sectors.map((i: any) => (\r\n            <Selector\r\n              obj={i}\r\n              label={i.value}\r\n              active={appliedFilters.sectors}\r\n              onClick={applySector}\r\n              type=\"\"\r\n              key={i.id}\r\n            />\r\n          ))}\r\n        </VeriticallyScrollableDiv>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      {searchBarExpanded && activeFilterType === \"States\" ? (\r\n        <VeriticallyScrollableDiv\r\n          className=\"pt-3 px-3\"\r\n          style={{ background: theme.sideSearch.background }}\r\n        >\r\n          {states.length === 0 ? <NoDataMessage /> : <></>}\r\n          {states.map((i: any) => (\r\n            <Selector\r\n              obj={i}\r\n              active={appliedFilters.states}\r\n              onClick={applyState}\r\n              label={i.value}\r\n              type=\"\"\r\n              key={i.id}\r\n            />\r\n          ))}\r\n        </VeriticallyScrollableDiv>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      {searchBarExpanded && activeFilterType === \"Industries\" ? (\r\n        <VeriticallyScrollableDiv\r\n          className=\"pt-3 px-3\"\r\n          style={{ background: theme.sideSearch.background }}\r\n        >\r\n          {industries.length === 0 ? <NoDataMessage /> : <></>}\r\n          {industries.map((i: any) => (\r\n            <Selector\r\n              obj={i}\r\n              label={i.value}\r\n              type=\"\"\r\n              active={appliedFilters.industries}\r\n              onClick={applyIndustry}\r\n              key={i.id}\r\n            />\r\n          ))}\r\n        </VeriticallyScrollableDiv>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {searchBarExpanded && activeFilterType === \"Stages\" ? (\r\n        <VeriticallyScrollableDiv\r\n          className=\"pt-3 px-3\"\r\n          style={{ background: theme.sideSearch.background }}\r\n        >\r\n          {stages.length === 0 ? <NoDataMessage /> : <></>}\r\n          {stages.map((i: any) => (\r\n            <Selector\r\n              obj={i}\r\n              label={i.value}\r\n              onClick={applyStages}\r\n              type=\"\"\r\n              active={appliedFilters.stages}\r\n              key={i.id}\r\n            />\r\n          ))}\r\n        </VeriticallyScrollableDiv>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport DropDownListComponent from \"./DropDownListComponent\";\r\nimport \"../../../scss/HomePageStyles/leftNavComponent.scss\";\r\nimport { RoundedBadge } from \"../../../styles-components/Badge\";\r\nimport HomePageApi from \"../../../config/homepageApis.json\";\r\nimport { useQuery } from \"../../../hooks/useQuery\";\r\nimport * as MapVariables from \"../Map/variables\";\r\nimport { Card } from \"../../../styles-components/Cards\";\r\nimport styled from \"styled-components\";\r\nimport { ThemeContext } from \"../../../config/context\";\r\nimport * as React from \"react\";\r\nimport { styled as MaterialStyled } from \"@mui/material/styles\";\r\nimport MuiAccordion, { AccordionProps } from \"@mui/material/Accordion\";\r\nimport MuiAccordionSummary, {\r\n  AccordionSummaryProps,\r\n} from \"@mui/material/AccordionSummary\";\r\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SearchBar from \"../AllSearch\";\r\nimport ViewInsight from \"../ViewInsight\";\r\n\r\nconst ResetButton = styled.button(\r\n  {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    height: \"37px\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    fontFamily: \"Montserrat\",\r\n  },\r\n  (props: any) => {\r\n    return {\r\n      background: props.theme.resetButton,\r\n    };\r\n  }\r\n);\r\n\r\nconst Accordion = MaterialStyled((props: AccordionProps) => (\r\n  <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `0px solid ${theme.palette.divider}`,\r\n  background: theme.palette.mode === \"dark\" ? \"rgba(37, 40, 58, 1)\" : \"white\",\r\n  \"&:not(:last-child)\": {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n  },\r\n  \"&:last-child\": {\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n  },\r\n  \"&:before\": {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AccordionSummary = MaterialStyled((props: AccordionSummaryProps) => {\r\n  const theme = useContext(ThemeContext);\r\n  return (\r\n    <MuiAccordionSummary\r\n      expandIcon={\r\n        <KeyboardArrowDownIcon sx={{ fontSize: \"18px\", color: theme.color }} />\r\n      }\r\n      {...props}\r\n    />\r\n  );\r\n})(({ theme }) => ({\r\n  backgroundColor:\r\n    theme.palette.mode === \"dark\" ? \"rgba(37, 40, 58, 1)\" : \"white\",\r\n  flexDirection: \"row-reverse\",\r\n  border: \"0px\",\r\n  paddingLeft: 0,\r\n  paddingRight: 0,\r\n  alignItems: \"flex-end\",\r\n  paddingBottom: \"5px\",\r\n  \"& .MuiAccordionSummary-expandIconWrapper.Mui-expanded\": {\r\n    transform: \"rotate(-180deg)\",\r\n    marginRight: \"10px\",\r\n    marginBottom: \"4px\",\r\n  },\r\n  \"& .MuiAccordionSummary-expandIconWrapper\": {\r\n    marginRight: \"10px\",\r\n    marginBottom: \"4px\",\r\n  },\r\n  \"& .MuiAccordionSummary-content\": {\r\n    marginLeft: \"0px\",\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nconst AccordionDetails = MaterialStyled(MuiAccordionDetails)(({ theme }) => ({\r\n  padding: 0,\r\n  background: theme.palette.mode === \"dark\" ? \"rgba(37, 40, 58, 1)\" : \"white\",\r\n}));\r\n\r\nconst DropDown = styled.button`\r\n  color: ${(props) => props.theme.colorCards} !important;\r\n  padding: 0px !important;\r\n`;\r\n\r\nconst LeftNavComponent = (props: any) => {\r\n  const {\r\n    setSelectedArea,\r\n    selectedArea,\r\n    tagsResources,\r\n    appliedFilters,\r\n    setAppliedFilters,\r\n    colorTheme,\r\n    fetchFilterList,\r\n    filterState,\r\n    filterLoading,\r\n    noShadow,\r\n    insight,\r\n    search: searchVisible,\r\n    dateRange,\r\n    dateRangeState,\r\n    dateRangeLoading,\r\n    selectedState,\r\n    setSelectedState,\r\n    handleToggle,\r\n    setStateViewMode,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = React.useState<string | false>(\"\");\r\n  const [searchBarExpanded, setSearchBarExpanded] = useState<boolean>(false);\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const history = useHistory();\r\n\r\n  const [selectedSector, setSelectedSector] = useState<any[]>([]);\r\n  const [selectedStages, setSelectedStages] = useState<any[]>([]);\r\n  const [selectedIndustry, setSelectedIndustry] = useState<any[]>([]);\r\n  const [selectedBadges, setSelectedBadges] = useState<any[]>([]);\r\n\r\n  const [leftNavWidth, setLeftNavWidth] = useState<number>(0);\r\n\r\n  const [fetchBadges, badgesState, badgesLoading] = useQuery(\r\n    HomePageApi.badges\r\n  );\r\n\r\n  const findSelectedIndex = (array: any[], obj: any) =>\r\n    array.findIndex((item: any) => item.id === obj.id);\r\n\r\n  const handleStateClick = (state: any) => {\r\n    const stateIndex = findSelectedIndex(selectedState, state);\r\n    if (stateIndex !== -1) {\r\n      return setSelectedState([]);\r\n    }\r\n    setSelectedState([state]);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    if (handleToggle) {\r\n      handleToggle();\r\n    }\r\n  };\r\n\r\n  const onApplyState = () => {\r\n    const stateIdsForAPiRequest = new Array();\r\n    selectedState.forEach((state: any) => stateIdsForAPiRequest.push(state.id));\r\n\r\n    setAppliedFilters((prevState: any) => ({\r\n      ...prevState,\r\n      states: stateIdsForAPiRequest,\r\n    }));\r\n\r\n    if (selectedState.length > 0) {\r\n      const area = {\r\n        id: selectedState[0].id,\r\n        stateName: selectedState[0].value,\r\n      };\r\n      setSelectedArea(area);\r\n      setExpanded(false);\r\n      history.push(`/maps/?id=${area.id}&state=${area.stateName}`);\r\n      closeModal();\r\n    } else {\r\n      setExpanded(false);\r\n      history.push(`/maps/`);\r\n    }\r\n  };\r\n\r\n  const handleSectorClick = (sectorObj: any) => {\r\n    const sectorIndex = findSelectedIndex(selectedSector, sectorObj);\r\n    let sectors: any[] = [];\r\n    if (sectorIndex !== -1) {\r\n      setSelectedSector((prevState: any) => {\r\n        const newSectors = [...prevState];\r\n        newSectors.splice(sectorIndex, 1);\r\n        sectors = newSectors;\r\n        return newSectors;\r\n      });\r\n      return sectors;\r\n    }\r\n    setSelectedSector((prevState: any) => {\r\n      const newSectors = [...prevState, sectorObj];\r\n      sectors = newSectors;\r\n      return newSectors;\r\n    });\r\n\r\n    return sectors;\r\n  };\r\n\r\n  const onApplySector = () => {\r\n    const sectorIdsForAPiRequest = new Array();\r\n    selectedSector.forEach((sector: any) =>\r\n      sectorIdsForAPiRequest.push(sector.id)\r\n    );\r\n\r\n    setAppliedFilters((prevState: any) => ({\r\n      ...prevState,\r\n      sectors: sectorIdsForAPiRequest,\r\n    }));\r\n    setExpanded(false);\r\n    closeModal();\r\n  };\r\n\r\n  const onSectorClear = () => {\r\n    setSelectedSector([]);\r\n    setAppliedFilters((prev: any) => ({ ...prev, sectors: [] }));\r\n  };\r\n\r\n  const handleStagesClick = (stage: any) => {\r\n    const stagesIndex = findSelectedIndex(selectedStages, stage);\r\n    if (stagesIndex !== -1) {\r\n      return setSelectedStages((prevState: any) => {\r\n        const newStages = [...prevState];\r\n        newStages.splice(stagesIndex, 1);\r\n        return newStages;\r\n      });\r\n    }\r\n    return setSelectedStages((prevState: any) => {\r\n      const newStages = [...prevState, stage];\r\n      return newStages;\r\n    });\r\n  };\r\n  const onApplyStages = () => {\r\n    const stagesIdsForApiRequest = new Array();\r\n    selectedStages.forEach((sector: any) =>\r\n      stagesIdsForApiRequest.push(sector.id)\r\n    );\r\n\r\n    setAppliedFilters((prevState: any) => ({\r\n      ...prevState,\r\n      stages: stagesIdsForApiRequest,\r\n    }));\r\n    setExpanded(false);\r\n    closeModal();\r\n  };\r\n\r\n  const handleIndustryClick = (industry: any) => {\r\n    const industryIndex = findSelectedIndex(selectedIndustry, industry);\r\n    if (industryIndex !== -1) {\r\n      return setSelectedIndustry((prevState: any) => {\r\n        const newIndustry = [...prevState];\r\n        newIndustry.splice(industryIndex, 1);\r\n        return newIndustry;\r\n      });\r\n    }\r\n    return setSelectedIndustry((prevState: any) => {\r\n      const newIndustry = [...prevState, industry];\r\n      return newIndustry;\r\n    });\r\n  };\r\n  const onApplyIndustry = () => {\r\n    const stagesIdsForApiRequest = new Array();\r\n    selectedIndustry.forEach((sector: any) =>\r\n      stagesIdsForApiRequest.push(sector.id)\r\n    );\r\n\r\n    setAppliedFilters((prevState: any) => ({\r\n      ...prevState,\r\n      industries: stagesIdsForApiRequest,\r\n    }));\r\n    setExpanded(false);\r\n    closeModal();\r\n  };\r\n\r\n  const onIndustryClear = () => {\r\n    setSelectedIndustry([]);\r\n    setAppliedFilters((prev: any) => ({ ...prev, industries: [] }));\r\n  };\r\n\r\n  const handleBadgesClick = (badges: any) => {\r\n    const badgesIndex = findSelectedIndex(selectedBadges, badges);\r\n    if (badgesIndex !== -1) {\r\n      return setSelectedBadges((prevState: any) => {\r\n        const newsBadges = [...prevState];\r\n        newsBadges.splice(badgesIndex, 1);\r\n        return newsBadges;\r\n      });\r\n    }\r\n    return setSelectedBadges((prevState: any) => {\r\n      const newsBadges = [badges];\r\n      return newsBadges;\r\n    });\r\n  };\r\n  const onApplyBadges = () => {\r\n    const badgesIdsForApiRequest = new Array();\r\n    selectedBadges.forEach((sector: any) =>\r\n      badgesIdsForApiRequest.push(sector.id)\r\n    );\r\n\r\n    setAppliedFilters((prevState: any) => ({\r\n      ...prevState,\r\n      badges: badgesIdsForApiRequest,\r\n    }));\r\n    setExpanded(false);\r\n    closeModal();\r\n  };\r\n\r\n  const onClearBadges = () => {\r\n    setSelectedBadges([]);\r\n    setAppliedFilters((prev: any) => ({ ...prev, badges: [] }));\r\n  };\r\n\r\n  const trimBadges = (badges: any[]) => {\r\n    const newBadgesList = new Array();\r\n    badges.forEach((badge: any) =>\r\n      newBadgesList.push({ id: badge.id, value: badge.title })\r\n    );\r\n    return [\r\n      { id: \"true\", value: \"Yes\" },\r\n      { id: \"false\", value: \"No\" },\r\n    ];\r\n  };\r\n\r\n  useEffect(() => {\r\n    // fetchBadges();\r\n    fetchFilterList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedArea.id !== \"india\") {\r\n      setSelectedState([\r\n        { id: selectedArea.id, value: selectedArea.stateName },\r\n      ]);\r\n      setAppliedFilters((prevState: any) => ({\r\n        ...prevState,\r\n        states: [selectedArea.id],\r\n      }));\r\n    } else {\r\n      setSelectedState([]);\r\n      setAppliedFilters((prevState: any) => ({ ...prevState, states: [] }));\r\n    }\r\n  }, [selectedArea]);\r\n  useEffect(() => {\r\n    if (\r\n      appliedFilters &&\r\n      appliedFilters.sectors &&\r\n      appliedFilters.sectors.length > 0\r\n    ) {\r\n      let sectors = [...appliedFilters.sectors];\r\n      setSelectedSector(sectors);\r\n    }\r\n  }, [appliedFilters.sectors]);\r\n  const handleChange =\r\n    (panel: string) => (event: React.SyntheticEvent, newExpanded: boolean) => {\r\n      setExpanded(newExpanded ? panel : false);\r\n    };\r\n\r\n  const viewInsightUrl = `/view-insight?id=${\r\n    selectedState[0] ? selectedState[0].id : \"\"\r\n  }&state=${selectedState[0] ? selectedState[0].value : \"\"}`;\r\n  const actions = {\r\n    handleStateClick,\r\n    closeModal,\r\n    onApplyState,\r\n    handleSectorClick,\r\n    onApplySector,\r\n    handleStagesClick,\r\n    onApplyStages,\r\n    handleIndustryClick,\r\n    onApplyIndustry,\r\n    setAppliedFilters,\r\n    appliedFilters,\r\n  };\r\n\r\n  const onApplyResetFilter = () => {\r\n    setAppliedFilters((prev: any) => ({\r\n      ...prev,\r\n      industries: [],\r\n      sectors: [],\r\n      states: [],\r\n      stages: [],\r\n    }));\r\n    setSelectedArea(MapVariables.INDIA);\r\n    history.push(\"/maps/\");\r\n    setStateViewMode(false);\r\n    setSelectedState([\"\"]);\r\n    setSelectedIndustry([]);\r\n    setSelectedSector([]);\r\n    setSelectedStages([]);\r\n    \r\n  };\r\n\r\n  const isResetFilterVisible =\r\n    appliedFilters.states.length > 0 ||\r\n    appliedFilters.sectors.length > 0 ||\r\n    appliedFilters.industries.length > 0 ||\r\n    appliedFilters.stages.length > 0;\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"left-side-nav-styles\"\r\n        style={{\r\n          position: \"sticky\",\r\n          top: \"44px\",\r\n          zIndex: 10,\r\n        }}\r\n      >\r\n        <div className=\"logo-left\">\r\n          <a href=\"https://www.startupindia.gov.in\" target=\"_blank\" rel=\"noreferrer\"><img\r\n                src={`https://www.startupindia.gov.in/content/dam/invest-india/newhomepage/Logo1.png`}\r\n                alt=\"main-logo\"/></a>\r\n        </div>\r\n        \r\n        <div className=\"px-2\">\r\n       \r\n          {!expanded && searchVisible ? (\r\n            <SearchBar\r\n              filterState={filterState}\r\n              actions={actions}\r\n              searchBarExpanded={searchBarExpanded}\r\n              colorTheme={colorTheme}\r\n              setSearchBarExpanded={setSearchBarExpanded}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {!searchBarExpanded ? (\r\n            <>\r\n              <Card\r\n                noShadow={noShadow}\r\n                className={`row mb-3 ps-2 pe-0 py-0 bg-white pb-2 dropdown-card p-16px ${\r\n                  !searchVisible && \"mt-0\"\r\n                }`}\r\n                id=\"flush1\"\r\n              >\r\n                <Accordion\r\n                  expanded={expanded === \"panel1\"}\r\n                  onChange={handleChange(\"panel1\")}\r\n                >\r\n                  <AccordionSummary\r\n                    aria-controls=\"panel1d-content\"\r\n                    id=\"panel1d-header\"\r\n                  >\r\n                    <DropDown\r\n                      className={`btn shadow-none d-flex w-100 mx-0 px-0 align-items-center mt-1 collapsed px-0 position-relative p-`}\r\n                      type=\"button\"\r\n                    >\r\n                      States and UTs\r\n                      {appliedFilters.states.length !== 0 && (\r\n                        <RoundedBadge className=\"ms-auto me-3 background-color-theme\">\r\n                          {appliedFilters?.states?.length}\r\n                        </RoundedBadge>\r\n                      )}\r\n                      {\r\n                        <span className=\"count-text ms-auto\">\r\n                          {filterState?.states?.length}\r\n                        </span>\r\n                      }\r\n                    </DropDown>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <DropDownListComponent\r\n                      accessor={\"states\"}\r\n                      colorTheme={colorTheme}\r\n                      originalData={filterState.states}\r\n                      loading={filterLoading}\r\n                      handleClick={handleStateClick}\r\n                      selectedItem={selectedState}\r\n                      handleApplyClick={onApplyState}\r\n                      dropDownId={\"#collapse1\"}\r\n                      handleClearClick={() => {\r\n                        setSelectedState([]);\r\n                        setSelectedArea(MapVariables.INDIA);\r\n                      }}\r\n                    />\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion\r\n                  expanded={expanded === \"panel3\"}\r\n                  onChange={handleChange(\"panel3\")}\r\n                >\r\n                  <AccordionSummary\r\n                    aria-controls=\"panel1d-content\"\r\n                    id=\"panel1d-header\"\r\n                  >\r\n                    <DropDown\r\n                      className={`btn shadow-none d-flex w-100 mx-0 px-0 align-items-center mt-1 collapsed px-0 position-relative p-`}\r\n                      type=\"button\"\r\n                    >\r\n                      Industries\r\n                      {appliedFilters?.industries?.length !== 0 && (\r\n                        <RoundedBadge className=\"ms-auto me-3 background-color-theme\">\r\n                          {appliedFilters?.industries?.length}\r\n                        </RoundedBadge>\r\n                      )}\r\n                      {\r\n                        <span className=\"count-text ms-auto\">\r\n                          {filterState?.industries?.length}\r\n                        </span>\r\n                      }\r\n                    </DropDown>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <DropDownListComponent\r\n                      accessor={\"industries\"}\r\n                      colorTheme={colorTheme}\r\n                      originalData={filterState.industries}\r\n                      loading={filterLoading}\r\n                      selectedItem={selectedIndustry}\r\n                      handleClick={handleIndustryClick}\r\n                      handleApplyClick={onApplyIndustry}\r\n                      dropDownId={\"#collapse3\"}\r\n                      handleClearClick={onIndustryClear}\r\n                    />\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n\r\n                <Accordion\r\n                  expanded={expanded === \"panel2\"}\r\n                  onChange={handleChange(\"panel2\")}\r\n                >\r\n                  <AccordionSummary\r\n                    aria-controls=\"panel1d-content\"\r\n                    id=\"panel1d-header\"\r\n                  >\r\n                    <DropDown\r\n                      className={`btn shadow-none d-flex w-100 mx-0 px-0 align-items-center mt-1 collapsed px-0 position-relative p-`}\r\n                      type=\"button\"\r\n                    >\r\n                      Sectors\r\n                      {appliedFilters?.sectors?.length !== 0 && (\r\n                        <RoundedBadge className=\"ms-auto me-3 background-color-theme\">\r\n                          {appliedFilters?.sectors?.length}\r\n                        </RoundedBadge>\r\n                      )}\r\n                      {\r\n                        <span className=\"count-text ms-auto\">\r\n                          {filterState?.sectors?.length}\r\n                        </span>\r\n                      }\r\n                    </DropDown>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <DropDownListComponent\r\n                      accessor={\"sectors\"}\r\n                      colorTheme={colorTheme}\r\n                      originalData={filterState.sectors}\r\n                      loading={filterLoading}\r\n                      selectedItem={selectedSector}\r\n                      handleClick={handleSectorClick}\r\n                      handleApplyClick={onApplySector}\r\n                      dropDownId={\"#collapse2\"}\r\n                      handleClearClick={onSectorClear}\r\n                    />\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n\r\n                <Accordion\r\n                  expanded={expanded === \"panel4\"}\r\n                  onChange={handleChange(\"panel4\")}\r\n                >\r\n                  <AccordionSummary\r\n                    aria-controls=\"panel1d-content\"\r\n                    id=\"panel1d-header\"\r\n                  >\r\n                    <DropDown\r\n                      className={`btn shadow-none d-flex w-100 mx-0 px-0 align-items-center mt-1 collapsed px-0 position-relative p-`}\r\n                      type=\"button\"\r\n                    >\r\n                      Stages\r\n                      {appliedFilters.stages.length !== 0 && (\r\n                        <RoundedBadge className=\"ms-auto me-3 background-color-theme\">\r\n                          {appliedFilters.stages.length}\r\n                        </RoundedBadge>\r\n                      )}\r\n                      {\r\n                        <span className=\"count-text ms-auto\">\r\n                          {filterState.stages.length}\r\n                        </span>\r\n                      }\r\n                    </DropDown>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <DropDownListComponent\r\n                      accessor={\"stages\"}\r\n                      colorTheme={colorTheme}\r\n                      originalData={filterState.stages}\r\n                      loading={filterLoading}\r\n                      selectedItem={selectedStages}\r\n                      handleClick={handleStagesClick}\r\n                      handleApplyClick={onApplyStages}\r\n                      dropDownId={\"#collapse4\"}\r\n                      handleClearClick={() => setSelectedStages([])}\r\n                    />\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n                {/* <Accordion\r\n                  expanded={expanded === \"panel5\"}\r\n                  onChange={handleChange(\"panel5\")}\r\n                  className=\"border-0\"\r\n                >\r\n                  <AccordionSummary\r\n                    aria-controls=\"panel1d-content\"\r\n                    id=\"panel1d-header\"\r\n                  >\r\n                    <DropDown\r\n                      className={`btn shadow-none d-flex w-100 mx-0 px-0 align-items-center mt-1 collapsed px-0 position-relative p-`}\r\n                      type=\"button\"\r\n                    >\r\n                      Winner Badges\r\n                      {appliedFilters.badges.length > 0 && (\r\n                        <RoundedBadge className=\"ms-auto me-3 background-color-theme\">\r\n                          {appliedFilters.badges.length}\r\n                        </RoundedBadge>\r\n                      )}\r\n                      <span className=\"count-text ms-auto\">{2}</span>\r\n                    </DropDown>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <DropDownListComponent\r\n                      accessor={\"value\"}\r\n                      colorTheme={colorTheme}\r\n                      originalData={trimBadges(badgesState)}\r\n                      loading={false}\r\n                      height={\"200px\"}\r\n                      selectedItem={selectedBadges}\r\n                      handleClick={handleBadgesClick}\r\n                      handleApplyClick={onApplyBadges}\r\n                      noSort={true}\r\n                      dropDownId={\"#collapse5\"}\r\n                      handleClearClick={() => {\r\n                        setSelectedBadges([]);\r\n                      }}\r\n                    />\r\n                  </AccordionDetails>\r\n                </Accordion> */}\r\n                {dateRange && (\r\n                  <Accordion\r\n                    expanded={expanded === \"panel6\"}\r\n                    onChange={handleChange(\"panel6\")}\r\n                  >\r\n                    <AccordionSummary\r\n                      aria-controls=\"panel1d-content\"\r\n                      id=\"panel1d-header\"\r\n                    >\r\n                      <DropDown\r\n                        className={`btn shadow-none d-flex w-100 mx-0 px-0 align-items-center mt-1 collapsed px-0 position-relative p-`}\r\n                        type=\"button\"\r\n                      >\r\n                        Date Range\r\n                      </DropDown>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <DropDownListComponent\r\n                        accessor={\"value\"}\r\n                        colorTheme={colorTheme}\r\n                        originalData={dateRangeState}\r\n                        loading={dateRangeLoading}\r\n                        selectedItem={selectedBadges}\r\n                        handleClick={handleBadgesClick}\r\n                        handleApplyClick={onApplyBadges}\r\n                        noSort={false}\r\n                        dropDownId={\"#collapse6\"}\r\n                        handleClearClick={onClearBadges}\r\n                      />\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                )}\r\n                {isResetFilterVisible ? (\r\n                  <ResetButton\r\n                    onClick={onApplyResetFilter}\r\n                    className=\"border-color-theme border-radius-4px mt-2 mb-3 text-theme\"\r\n                  >\r\n                    Reset All Filter\r\n                  </ResetButton>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Card>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {insight && (\r\n            <ViewInsight\r\n              colorTheme={colorTheme}\r\n              viewInsightUrl={viewInsightUrl}\r\n              selectedState={selectedState}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LeftNavComponent);\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const Card = styled.div<any>`\r\npadding: 20px 16px 20px 16px;\r\nbackground: ${props=> props.background ? props.background : props.theme.bgCards} !important;\r\nbox-shadow: ${props=> props.theme.shadowCards} !important;\r\nborder-radius: 4px;\r\ncolor: ${props=> props.theme.colorCards} !important;\r\nborder: ${ props=> props.border && props.theme.showCaseStartUpBorder};\r\n@media (max-width:768px){\r\n    box-shadow: ${(props:any)=> props.noShadow ? '0px 0px black' : props.theme.shadowCards } !important;\r\n}\r\n`\r\n\r\nexport const CountCard = styled.div<any>`\r\n    background: ${props=> props.active ? \"#0177FA\" : props.theme.bgCards};\r\n    color: ${props=> props.active ? 'white' : props.theme.bgCards}\r\n`","import styled from \"styled-components\";\r\n\r\nexport const Badge = styled.div`\r\n    border-radius: 12px;\r\n    color: black;\r\n    padding: 3px 6px;\r\n    padding-bottom: 2px !important;\r\n    font-size: smaller;\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    background-color: ${props=> props.theme.bgBadge} ;\r\n   \r\n    color: ${props=> props.theme.color};\r\n    height: fit-content;\r\n    max-width: 100% ;\r\n    &:first-child{\r\n      margin-top: -1px !important;\r\n    }\r\n  `;\r\n\r\nexport const RoundedBadge = styled.div`\r\n   width: 23px;\r\n   height: 23px;\r\n   font-size: 13px;\r\n   display: flex;\r\n   justify-content: center;\r\n   align-items: center;\r\n   color: #feffff;\r\n   border-radius: 50%;\r\n   position: absolute;\r\n   right: 1rem;\r\n   visibility: ${props=> props.hidden ? \"hidden\": 'visible'};\r\n  `\r\n// export const RoundedBadge = styled.span`\r\n//     padding-top: 3px;\r\n//     padding-bottom: 3px;\r\n//     width:13.5%;\r\n//     color: #feffff;\r\n//     background-color: #0177fa;\r\n//     border-radius: 50%;\r\n//   `\r\n"],"sourceRoot":""}