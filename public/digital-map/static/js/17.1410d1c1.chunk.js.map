{"version":3,"sources":["pages/HomePage/LeftNav/MobileFilter.tsx"],"names":["MobileView","props","anchor","React","top","left","bottom","right","state","setState","toggleDrawer","open","event","type","key","trimDateRangeData","array","length","newList","Array","forEach","item","push","id","from","to","value","text","fetchDateRange","isVisible","onClose","handleToggle","className","sx","width","role","onClick","onKeyDown","filterProps","dateRangeState","reverse","dateRangeLoading","insight","search","downIconAlignment","dateRange","noShadow"],"mappings":"sOAgBe,SAASA,EAAWC,GAAyB,IAgC5CC,EAhC2C,EAC/BC,WAAe,CACvCC,KAAK,EACLC,MAAM,EACNC,QAAQ,EACRC,OAAO,IACP,mBALKC,EAAK,KAAEC,EAAQ,KAOhBC,EACJ,SAACR,EAAgBS,GAAa,OAC9B,SAACC,IAEkB,YAAfA,EAAMC,MACkC,QAAtCD,EAA8BE,KACS,UAAtCF,EAA8BE,MAKnCL,EAAS,2BAAKD,GAAK,kBAAGN,EAASS,OAG3BI,EAAoB,SAACC,GACzB,GAAGA,GAASA,EAAMC,OAAO,CACvB,IAAMC,EAAU,IAAIC,MAIpB,OAHAH,EAAMI,SAAQ,SAACC,GACbH,EAAQI,KAAK,CAAEC,GAAIF,EAAKG,KAAO,IAAMH,EAAKI,GAAIC,MAAOL,EAAKM,UAErDT,EACF,MAAO,IA4BlB,OAJAf,aAAgB,WACdF,EAAM2B,mBACL,IAGD,8BACE,cAAC,WAAc,UACb,eAAC,IAAM,CACL1B,OAAQ,SACRS,KAAMV,EAAM4B,UACZC,QAAS,kBAAM7B,EAAM8B,gBAAe,UAGpC,mBAAGC,UAAU,8CAA6C,sBAlCpD9B,EAmCA,SAlCZ,cAAC,IAAG,CACF+B,GAAI,CAAEC,MAAkB,WAAXhC,EAAsB,OAAS,KAC5CiC,KAAK,eACLC,QAAS1B,EAAaR,GAAQ,GAC9BmC,UAAW3B,EAAaR,GAAQ,GAAO,SAEvC,cAAC,UAAO,2BACFD,EAAMqC,aAAW,IACrBC,eAAgBxB,EAAkBd,EAAMsC,gBAAgBC,UACxDC,iBAAkBxC,EAAMwC,iBACxBC,SAAS,EACTC,QAAQ,EACRC,mBAAiB,EACjBC,WAAW,EACXC,UAAU,EACVf,aAAc9B,EAAM8B","file":"static/js/17.1410d1c1.chunk.js","sourcesContent":["import Box from \"@mui/material/Box\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport * as React from \"react\";\r\nimport LeftNav from \"./LeftNavComponent\";\r\n\r\ninterface MobileViewProps {\r\n  filterProps: any;\r\n  handleToggle: any;\r\n  isVisible: boolean;\r\n  fetchDateRange: any;\r\n  dateRangeState: any[];\r\n  dateRangeLoading: boolean;\r\n}\r\n\r\ntype Anchor = \"bottom\";\r\n\r\nexport default function MobileView(props: MobileViewProps) {\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: true,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer =\r\n    (anchor: Anchor, open: boolean) =>\r\n    (event: React.KeyboardEvent | React.MouseEvent) => {\r\n      if (\r\n        event.type === \"keydown\" &&\r\n        ((event as React.KeyboardEvent).key === \"Tab\" ||\r\n          (event as React.KeyboardEvent).key === \"Shift\")\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const trimDateRangeData = (array:any[]) =>{\r\n      if(array && array.length){\r\n        const newList = new Array();\r\n        array.forEach((item)=>{\r\n          newList.push({ id: item.from + '/' + item.to, value: item.text })\r\n        })\r\n        return newList\r\n      } else return []\r\n    }\r\n\r\n  const list = (anchor: Anchor) => (\r\n    <Box\r\n      sx={{ width: anchor === \"bottom\" ? \"auto\" : 250 }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <LeftNav\r\n        {...props.filterProps}\r\n        dateRangeState={trimDateRangeData(props.dateRangeState).reverse()}\r\n        dateRangeLoading={props.dateRangeLoading}\r\n        insight={false}\r\n        search={false}\r\n        downIconAlignment\r\n        dateRange={true}\r\n        noShadow={true}\r\n        handleToggle={props.handleToggle}\r\n      />\r\n    </Box>\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    props.fetchDateRange();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <React.Fragment>\r\n        <Drawer\r\n          anchor={\"bottom\"}\r\n          open={props.isVisible}\r\n          onClose={() => props.handleToggle()}\r\n        >\r\n          {/* <div style={{ position: 'absolute', top: 40, width: '100px', height: '50px', background: 'red' }}></div> */}\r\n          <p className=\"font-Mont font-16px font-600 pt-4 ps-3 mb-0\">FILTERS</p>\r\n          {list(\"bottom\")}\r\n        </Drawer>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}