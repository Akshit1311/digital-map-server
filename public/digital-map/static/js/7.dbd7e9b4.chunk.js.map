{"version":3,"sources":["pages/HomePage/Map/statesDistrictView/index.ts","pages/HomePage/Map/StateView.tsx"],"names":["StatesDistrictView","id","name","text","path","WestBengal","Telengana","Sikkim","MadhyaPradesh","Lakshdweep","JammuKashmir","Haryana","Gujrat","Chattisgarh","Bihar","Assam","ArunachalPradesh","AndmanNichobarIsland","AndraPradesh","NagaLand","Meghalaya","Tripura","PuduCheery","Jharkhand","Chandigarh","HimachalPradesh","Maharashtra","Karnataka","Rajasthan","Delhi","Goa","Kerla","Manipur","TamilNadu","Uttarakhand","UttarPradesh","Ladakh","DadarAndNagarHaweli","Orisha","Punjab","MapWrapper","styled","div","props","theme","map","color","StateView","selectedArea","colorTheme","startupType","data","setStateViewMode","role","dateRangeCount","useContext","ThemeContext","componentProps","tooltip","sx","fontSize","background","border","ThemeColorIdentifier","borderRadius","cursor","zIndex","arrow","backgroundColor","boxSizing","findMaximumValue","max","key","StartupTypesKeys","Array","isArray","forEach","district","value","statistics","case1Value","getStatistics","districtName","find","toLowerCase","getColorOpacity","accessor","maxValue","Number","val","colorLevel","GradientBar","maxCountValue","useState","currentCount","setCurrentCount","useEffect","interval","count","setInterval","prevState","clearInterval","className","style","position","viewBox","onDoubleClick","filter","state","index","counts","getCount","placement","title","followCursor","componentsProps","stroke","fill","strokeWidth","fillOpacity","d"],"mappings":"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","file":"static/js/7.dbd7e9b4.chunk.js","sourcesContent":["import Maharashtra from \"./Maharashtra.json\";\r\nimport Karnataka from \"./karnataka.json\";\r\nimport Rajasthan from \"./rajasthan.json\";\r\nimport Goa from \"./goa.json\";\r\nimport Delhi from \"./delhi.json\";\r\nimport Kerla from \"./kerala.json\";\r\nimport Manipur from \"./manipur.json\";\r\nimport TamilNadu from \"./Tamilnadu.json\";\r\nimport Chandigarh from \"./Chandigarh.json\";\r\nimport DadarAndNagarHaweli from \"./DadarAndNagarHaweli.json\";\r\nimport HimachalPradesh from \"./HimachalPradesh.json\";\r\nimport Jharkhand from \"./jharkhand.json\";\r\nimport Ladakh from \"./Ladakh.json\";\r\nimport Meghalaya from \"./Meghalay.json\";\r\nimport Mizoram from \"./Mizoram.json\";\r\nimport NagaLand from \"./Nagaland.json\";\r\nimport PuduCheery from \"./puducherry.json\";\r\nimport Punjab from \"./punjab.json\";\r\nimport Tripura from \"./tripura.json\";\r\nimport Uttarakhand from \"./uttarakhand.json\";\r\nimport AndraPradesh from \"./andhrapradesh.json\";\r\nimport AndmanNichobarIsland from \"./andmanAndNichobar.json\";\r\nimport ArunachalPradesh from \"./arunachalPradesh.json\";\r\nimport Assam from \"./assam.json\";\r\nimport Bihar from \"./bihar.json\";\r\nimport Chattisgarh from \"./chattisgarh.json\";\r\nimport Gujrat from \"./gujarat.json\";\r\nimport Haryana from \"./haryana.json\";\r\nimport JammuKashmir from \"./jammuAndKashmir.json\";\r\nimport Lakshdweep from \"./lakshdweep.json\";\r\nimport MadhyaPradesh from \"./madhyaPradesh.json\";\r\nimport Orisha from \"./orisha.json\";\r\nimport Sikkim from \"./sikkim.json\";\r\nimport Telengana from \"./telangana.json\";\r\nimport UttarPradesh from \"./uttarpradesh.json\";\r\nimport WestBengal from \"./westBengal.json\";\r\n\r\nexport interface DistrictBorderType {\r\n  name: string;\r\n  d: string;\r\n}\r\n\r\nexport interface StateWiseMapViewType {\r\n  name?: string;\r\n  id?: string;\r\n  path?: DistrictBorderType[];\r\n  text?: string;\r\n}\r\n\r\nexport const StatesDistrictView: StateWiseMapViewType[] = [\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb40\",\r\n    name: \"West Bengal\",\r\n    text: \"West Bengal\",\r\n    path: [...WestBengal],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb3c\",\r\n    name: \"Telangana\",\r\n    text: \"Telangana\",\r\n    path: [...Telengana],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb3a\",\r\n    name: \"Sikkim\",\r\n    text: \"Sikkim\",\r\n    path: [...Sikkim],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb30\",\r\n    name: \"Madhya Pradesh\",\r\n    text: \"Madhya Pradesh\",\r\n    path: [...MadhyaPradesh],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb2f\",\r\n    name: \"Lakshadweep\",\r\n    text: \"Lakshadweep\",\r\n    path: [...Lakshdweep],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb2b\",\r\n    name: \"Jammu and Kashmir\",\r\n    text: \"Jammu and Kashmir\",\r\n    path: [...JammuKashmir],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb29\",\r\n    name: \"Haryana\",\r\n    text: \"Haryana\",\r\n    path: [...Haryana],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb28\",\r\n    name: \"Gujarat\",\r\n    text: \"Gujarat\",\r\n    path: [...Gujrat],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb25\",\r\n    name: \"Chhattisgarh\",\r\n    text: \"Chhattisgarh\",\r\n    path: [...Chattisgarh],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb23\",\r\n    name: \"Bihar\",\r\n    text: \"Bihar\",\r\n    path: [...Bihar],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb22\",\r\n    name: \"Assam\",\r\n    text: \"Assam\",\r\n    path: [...Assam],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb21\",\r\n    name: \"Arunachal Pradesh\",\r\n    text: \"Arunachal Pradesh\",\r\n    path: [...ArunachalPradesh],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb1f\",\r\n    name: \"Andaman and Nicobar Islands\",\r\n    text: \"Andaman and Nicobar Islands\",\r\n    path: [...AndmanNichobarIsland],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb20\",\r\n    name: \"Andhra Pradesh\",\r\n    text: \"Andhra Pradesh\",\r\n    path: [...AndraPradesh],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb35\",\r\n    name: \"Nagaland\",\r\n    text: \"Nagaland\",\r\n    path: [...NagaLand],\r\n  },\r\n  // {\r\n  //   id: \"5f48ce592a9bb065cdf9fb34\",\r\n  //   name: \"Mizoram\",\r\n  //   text: \"Mizoram\",\r\n  //   path: [...Mizoram],\r\n  // },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb33\",\r\n    name: \"Meghalaya\",\r\n    text: \"Meghalaya\",\r\n    path: [...Meghalaya],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb3d\",\r\n    name: \"Tripura\",\r\n    text: \"Tripura\",\r\n    path: [...Tripura],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb37\",\r\n    name: \"Puducherry\",\r\n    text: \"Puducherry\",\r\n    path: [...PuduCheery],\r\n  },\r\n\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb2c\",\r\n    name: \"Jharkhand\",\r\n\r\n    text: \"Jharkhand\",\r\n    path: [...Jharkhand],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb24\",\r\n    name: \"Chandigarh\",\r\n\r\n    text: \"Chandigarh\",\r\n    path: [...Chandigarh],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb2a\",\r\n    name: \"Himachal Pradesh\",\r\n\r\n    text: \"Himachal Pradesh\",\r\n    path: [...HimachalPradesh],\r\n  },\r\n\r\n  {\r\n    name: \"Maharashtra\",\r\n    text: \"Maharashtra\",\r\n    id: \"5f48ce592a9bb065cdf9fb31\",\r\n    path: [...Maharashtra],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb2d\",\r\n    name: \"Karnataka\",\r\n    text: \"Karnataka\",\r\n    path: [...Karnataka],\r\n  },\r\n  {\r\n    name: \"Rajasthan\",\r\n    id: \"5f48ce592a9bb065cdf9fb39\",\r\n    text: \"Rajasthan\",\r\n    path: [...Rajasthan],\r\n  },\r\n  {\r\n    name: \"Delhi\",\r\n    id: \"5f48ce592a9bb065cdf9fb26\",\r\n    text: \"Delhi\",\r\n    path: [...Delhi],\r\n  },\r\n  {\r\n    name: \"Goa\",\r\n    id: \"5f48ce592a9bb065cdf9fb27\",\r\n    text: \"Goa\",\r\n    path: [...Goa],\r\n  },\r\n  {\r\n    name: \"Kerala\",\r\n    text: \"Kerala\",\r\n    id: \"5f48ce592a9bb065cdf9fb2e\",\r\n    path: [...Kerla],\r\n  },\r\n  {\r\n    name: \"Manipur\",\r\n    id: \"5f48ce592a9bb065cdf9fb32\",\r\n    text: \"Manipur\",\r\n    path: [...Manipur],\r\n  },\r\n  {\r\n    name: \"Tamil Nadu\",\r\n    id: \"5f48ce592a9bb065cdf9fb3b\",\r\n    text: \"Tamil Nadu\",\r\n    path: [...TamilNadu],\r\n  },\r\n  {\r\n    name: \"Uttarakhand\",\r\n    id: \"5f48ce592a9bb065cdf9fb3e\",\r\n    text: \"Uttarakhand\",\r\n    path: [...Uttarakhand],\r\n  },\r\n  {\r\n    name: \"West Bengal\",\r\n    id: \"5f48ce592a9bb065cdf9fb3b\",\r\n    text: \"West Bengal\",\r\n    path: [],\r\n  },\r\n  {\r\n    name: \"Uttar Pradesh\",\r\n    id: \"5f48ce592a9bb065cdf9fb3f\",\r\n    text: \"Uttar Pradesh\",\r\n    path: [...UttarPradesh],\r\n  },\r\n  {\r\n    name: \"Ladakh\",\r\n    id: \"5f48ce592a9bb065cdf9fb41\",\r\n    text: \"Ladakh\",\r\n    path: [...Ladakh],\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb42\",\r\n    name: \"Dadra and Nagar Haveli and Daman and Diu\",\r\n    path: [...DadarAndNagarHaweli],\r\n    text: \"Dadra and Nagar Haveli and Daman and Diu\",\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb36\",\r\n    name: \"Odisha\",\r\n    path: [...Orisha],\r\n    text: \"Odisha\",\r\n  },\r\n  {\r\n    id: \"5f48ce592a9bb065cdf9fb38\",\r\n    name: \"Punjab\",\r\n\r\n    text: \"Punjab\",\r\n    path: [...Punjab],\r\n  },\r\n];\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ThemeColorIdentifier } from \"../../../helper-function/themeColor\";\r\nimport { ThemeContext } from \"../../../config/context\";\r\nimport { Tooltip as MuiToolTip } from \"@mui/material\";\r\nimport {\r\n  DistrictBorderType,\r\n  StatesDistrictView,\r\n  StateWiseMapViewType,\r\n} from \"./statesDistrictView\";\r\nimport { StartupTypesKeys } from \"../../../config/Constants\";\r\n\r\ninterface StatisticsDataCount {\r\n  Exploring: number;\r\n  Incubator: number;\r\n  Corporate: number;\r\n  SIH_Admin: number;\r\n  Mentor: number;\r\n  Academia: number;\r\n  // GovernmentBody: number;\r\n  ConnectToPotentialPartner: number;\r\n  IndiaMarketEntry: number;\r\n  Individual: number;\r\n  ServiceProvider: number;\r\n  Investor: number;\r\n  Startup: number;\r\n  Accelerator: number;\r\n  DpiitCertified: number;\r\n  TaxExempted: number;\r\n  WomenLed: number;\r\n  PatentStartup: number;\r\n  SeedFundStartup: number;\r\n  ShowcasedStartups: number;\r\n}\r\ninterface StatisticsData {\r\n  districtId: string;\r\n  district: string;\r\n  stateId: string;\r\n  state: string;\r\n  statistics: StatisticsDataCount;\r\n}\r\n\r\ninterface StatisticsDataMainObj {\r\n  from: string;\r\n  to: string;\r\n  data: StatisticsData[];\r\n}\r\nexport interface StateViewProps {\r\n  selectedArea: string;\r\n  colorTheme: any;\r\n  startupType: any;\r\n  data: StatisticsDataMainObj;\r\n  setStateViewMode: any;\r\n  role: string;\r\n  dateRangeCount: boolean\r\n}\r\n\r\nconst MapWrapper = styled.div`\r\n  color: ${(props) => props.theme.map.color} !important;\r\n`;\r\n\r\nexport default function StateView({\r\n  selectedArea,\r\n  colorTheme,\r\n  startupType,\r\n  data,\r\n  setStateViewMode,\r\n  role,\r\n  dateRangeCount\r\n}: StateViewProps) {\r\n  const theme = useContext(ThemeContext);\r\n  const componentProps = {\r\n    tooltip: {\r\n      sx: {\r\n        fontSize: \"15px\",\r\n        background: theme.tooltip.background,\r\n        border: `2px solid ${ThemeColorIdentifier(colorTheme)}`,\r\n        borderRadius: \"5px\",\r\n        color: theme.tooltip.text,\r\n        cursor: \"grab\",\r\n        zIndex: 10000,\r\n      },\r\n    },\r\n    arrow: {\r\n      sx: {\r\n        color: theme.tooltip.background,\r\n        \"&::before\": {\r\n          border: `2px solid ${ThemeColorIdentifier(colorTheme)}`,\r\n          backgroundColor: theme.tooltip.background,\r\n          boxSizing: \"border-box\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const findMaximumValue = () => {\r\n    let max = 0;\r\n    let key:any = '';\r\n    if(role !== 'Startup'){\r\n      key = role\r\n    }else{\r\n      key = StartupTypesKeys[startupType.text]\r\n    }\r\n    if (Array.isArray(data.data)) {\r\n      data.data.forEach((district: any) => {\r\n        const value = district.statistics[key];        \r\n        if (!value) {\r\n          const case1Value =\r\n            district.statistics[key];\r\n          max = case1Value > max ? case1Value : max;\r\n        } else {\r\n          max = value > max ? value : max;\r\n        }\r\n      });\r\n    }\r\n    return max;\r\n  };\r\n\r\n  const getStatistics = (districtName: string) => {\r\n    \r\n    if (Array.isArray(data.data)) {\r\n      return data.data.find((district: StatisticsData) => {        \r\n        if (!district.district || !districtName) return;\r\n        return district.district.toLowerCase() == districtName.toLowerCase();\r\n      });\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const roundOff = (value: number) => {\r\n    if (value < 0.9) return value + 0.1;\r\n    else return value;\r\n  };\r\n \r\n\r\n  const getColorOpacity = (districtName: string, accessor: string) => {\r\n    const maxValue = findMaximumValue();\r\n    const statistics: any = getStatistics(districtName); \r\n    let key:any = '';\r\n    if(accessor !== 'Startup'){\r\n      key = accessor\r\n    }else{\r\n      key = StartupTypesKeys[startupType.text]\r\n    }\r\n     \r\n    if (statistics && maxValue) {      \r\n      if (\r\n        Number(statistics.statistics[key]) === 0\r\n      ) {\r\n        return 0;\r\n      }\r\n      const val = key\r\n        ? key\r\n        : \"Startup\";\r\n\r\n        \r\n      const colorLevel: number = Number(statistics.statistics[val]) / maxValue;\r\n      return roundOff(colorLevel);\r\n    }\r\n   \r\n    return 0;\r\n  };\r\n\r\n  const getCount = (districtName: string, accessor: string) => {\r\n    const statistics: any = getStatistics(districtName);\r\n    if (statistics) {\r\n      let key:any = '';\r\n      if(accessor !== 'Startup'){\r\n        key = accessor\r\n      }else{\r\n        key = StartupTypesKeys[startupType.text]\r\n      }\r\n      if (\r\n        Number(statistics.statistics[key]) === 0\r\n      ) {\r\n        return 0;\r\n      }\r\n      const val = key\r\n        ? key\r\n        : \"Startup\";\r\n\r\n      \r\n      return statistics.statistics[val] ? statistics.statistics[val] : 0;\r\n    }\r\n  };\r\n\r\n  const GradientBar = ({ maxCountValue }: any) => {\r\n    const [currentCount, setCurrentCount] = useState<any>(0);\r\n    useEffect(() => {\r\n      const count = maxCountValue;\r\n  \r\n      if (count && count > currentCount) {\r\n        let interval: any;\r\n        if (currentCount < count) {\r\n          interval = setInterval(() => {\r\n            setCurrentCount((prevState: any) => {\r\n              if (prevState === Number(count) || prevState > Number(count)) {\r\n                return count;\r\n              }\r\n              if (count > 1000) {\r\n                return prevState + 500;\r\n              }\r\n              if (count < 1000 && count > 500) {\r\n                return prevState + 10;\r\n              }\r\n              return prevState + 1;\r\n            });\r\n          }, 1);\r\n        } else if (currentCount === count) {\r\n          clearInterval(interval);\r\n        } else {\r\n        }\r\n        return () => clearInterval(interval);\r\n      } else if (count && count < currentCount) {\r\n        let interval: any;\r\n        if (currentCount > count) {\r\n          interval = setInterval(() => {\r\n            setCurrentCount((prevState: any) => {\r\n              if (prevState === Number(count) || prevState < Number(count)) {\r\n                return count;\r\n              }\r\n              if (currentCount - count > 10000) {\r\n                return prevState - 500;\r\n              }\r\n              if (currentCount - count > 5000) {\r\n                return prevState - 200;\r\n              }\r\n              if (currentCount - count > 1000) {\r\n                return prevState - 100;\r\n              }\r\n              return prevState - 1;\r\n            });\r\n          }, 1);\r\n        } else if (currentCount === count) {\r\n          clearInterval(interval);\r\n        } else {\r\n        }\r\n        return () => clearInterval(interval);\r\n      }\r\n    }, [maxCountValue]);\r\n    return (\r\n      <div className=\"gradient-bar-map d-flex justify-content-between\">\r\n        <p className=\"min-gradient-bar\">0</p>\r\n        <p className=\"max-gradient-bar\">{currentCount}</p>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <MapWrapper\r\n      className=\"m-2 mt-0 pt-0 d-flex justify-content-center\"\r\n      style={{ position: \"relative\" }}\r\n    >\r\n\r\n        <GradientBar maxCountValue={findMaximumValue()} />\r\n    \r\n      <svg\r\n        viewBox=\"-50 0 550 550\"\r\n        onDoubleClick={() => setStateViewMode(false)}\r\n        className=\"safari-svg\"\r\n      >\r\n        {StatesDistrictView.filter((state: any) => {\r\n          return state.id === selectedArea;\r\n        }).map((state: any, index: number) =>\r\n          state.path.map((district: DistrictBorderType) => {\r\n            let counts: number = getCount(district.name, role);\r\n            return (\r\n              <MuiToolTip\r\n                placement=\"top\"\r\n                key={district.name}\r\n                title={district.name + `(${counts ? counts : 0})`}\r\n                followCursor\r\n                arrow\r\n                componentsProps={componentProps}\r\n              >\r\n                \r\n                <path\r\n                  stroke=\"black\"\r\n                  fill={ThemeColorIdentifier(colorTheme)}\r\n                  strokeWidth={\"1\"}\r\n                  fillOpacity={getColorOpacity(district.name,role)}\r\n                  d={district.d}\r\n                />\r\n              </MuiToolTip>\r\n            );\r\n          })\r\n        )}\r\n      </svg>\r\n    </MapWrapper>\r\n  );\r\n}\r\n"],"sourceRoot":""}