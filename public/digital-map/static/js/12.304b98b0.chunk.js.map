{"version":3,"sources":["components/ReactTable/TableContainer.tsx","pages/HomePage/DataTable.tsx","components/DataTable/styled.tsx","components/DataTable/Cells.tsx","components/DataTable/Search.tsx"],"names":["TableContainer","props","columns","bodyData","noOfItemsToRender","loop","mentorsTable","useState","originalData","setOriginalData","renderedData","setRenderedData","noOfItemsRender","setNoOfItemRender","searchQuery","setSearchQuery","theme","useContext","ThemeContext","useTable","data","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","memorisedValue","React","useMemo","newObj","Object","forEach","item","sum","dataValue","Number","statistics","clone","push","id","isUnionTerritory","name","text","calculate","getHeaderCellClass","index","useEffect","removedEmptyData","state","length","className","style","minWidth","map","headerGroup","getHeaderGroupProps","dataTable","headerBorder","headers","column","Cells","getSortByToggleProps","cellClass","getHeaderProps","borderWidth","fontWeight","borderColor","key","borderHeight","render","toLowerCase","split","isSorted","isSortedDesc","fontSize","marginBottom","marginTop","maxWidth","Search","background","searchBg","borderRadius","onChange","query","value","list","filter","includes","pop","placeholder","placeholderClass","inputClass","searchBorderClass","slice","row","getRowProps","bodyClass","cells","cell","getCellProps","textRight","visibility","onClick","calculated","startupLoops","mentorsLoop","DataTableComponent","fetch","appliedFilters","loading","Header","accessor","columns2","states","undefined","badges","counts","registrationFrom","registrationTo","stages","industries","sectors","memo","TR","styled","tr","bgCards","colorCards","TH","th","IconSpan","span","color","Input","input","children","borderStyle","borderWidthA","borderColorA","dashedBorder","borderLeftA","minHeight","borderLeft","position","marginLeft","textColor","borderRadiusAll","backgroundAll","delayDebounceFn","setTimeout","clearTimeout","borderTopLeftRadius","borderBottomLeftRadius","type","borderTopRightRadius","borderBottomRightRadius","e","target"],"mappings":"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","file":"static/js/12.304b98b0.chunk.js","sourcesContent":["import ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\r\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useSortBy, useTable } from \"react-table\";\r\nimport { ThemeContext } from \"../../config/context\";\r\nimport Cells from \"../DataTable/Cells\";\r\nimport SearchBarComponent from \"../DataTable/Search\";\r\nimport { TR } from \"../DataTable/styled\";\r\n\r\ninterface ReactTableType {\r\n  columns: any[];\r\n  data: any[];\r\n}\r\n\r\nconst TableContainer = (props: any) => {\r\n  const { columns, bodyData, noOfItemsToRender, loop, mentorsTable } = props;\r\n  const [originalData, setOriginalData] = useState<any[]>([]);\r\n  const [renderedData, setRenderedData] = useState<any>([]);\r\n\r\n  const [noOfItemsRender, setNoOfItemRender] = useState<number>(6);\r\n\r\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable(\r\n      {\r\n        columns,\r\n        data: renderedData,\r\n      },\r\n      useSortBy\r\n    );\r\n\r\n  const calculate = () => {\r\n    const newObj: any = new Object();\r\n    loop.forEach((item: string) => {\r\n      let sum = 0;\r\n      originalData.forEach((dataValue: any) => {\r\n        sum += Number(dataValue.statistics[item]);\r\n      });\r\n      newObj[item] = sum;\r\n    });\r\n    const clone = [...originalData];\r\n    clone.push({\r\n      id: \"Some other\",\r\n      isUnionTerritory: false,\r\n      name: \"Total\",\r\n      text: \"Total\",\r\n      statistics: newObj,\r\n    });\r\n    return clone;\r\n  };\r\n\r\n  const memorisedValue = React.useMemo(() => {\r\n    return calculate();\r\n  }, [originalData]);\r\n\r\n  const onSearch = (query: string) => {\r\n    const value = query;\r\n    let list = memorisedValue.filter((item) =>\r\n      item.text && typeof item.text === \"string\"\r\n        ? item.text.toLowerCase().includes(value.toLowerCase())\r\n        : false\r\n    );\r\n   \r\n    // Remove last item from list if list having some other id object\r\n    if(list[(list.length - 1)]['name'] === 'Total'){\r\n       list.pop();      \r\n    }\r\n    setSearchQuery(value);\r\n    setRenderedData(list);\r\n  };\r\n\r\n  const handleViewMore = () => {\r\n    const calculated = noOfItemsRender + 8;\r\n\r\n    if (calculated > memorisedValue.length) {\r\n      setNoOfItemRender(memorisedValue.length);\r\n      setRenderedData(memorisedValue);\r\n      return;\r\n    }\r\n\r\n    setNoOfItemRender(calculated);\r\n    // setRenderedData(memorisedValue.slice(0, calculated));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const removedEmptyData: any[] = [];\r\n    bodyData.forEach((item: any) => {\r\n      if (\r\n        item.state &&\r\n        item.state.length > 3 &&\r\n        item.name &&\r\n        item.name.length > 3 &&\r\n        item.text &&\r\n        item.text.length > 3\r\n      )\r\n        removedEmptyData.push(item);\r\n    });\r\n    setOriginalData(removedEmptyData);\r\n    setRenderedData(removedEmptyData);\r\n    if (noOfItemsToRender) {\r\n      setNoOfItemRender(noOfItemsToRender);\r\n    }\r\n  }, [bodyData]);\r\n\r\n  function getHeaderCellClass(index: number) {\r\n    if (index === 0 && mentorsTable) return \"header-cell-state-2\";\r\n    if (index === 0 && !mentorsTable) return \"header-cell-state\";\r\n    if (index !== 0 && mentorsTable) return \"header-cell-2\";\r\n    if (index !== 0 && !mentorsTable) return \"header-cell\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"data-table-overflow-scroll\">\r\n      <table\r\n        {...getTableProps()}\r\n        className=\"w-100\"\r\n        style={{ minWidth: \"900px\" }}\r\n      >\r\n        <thead className=\"w-100 py-5 \">\r\n          {headerGroups.map((headerGroup, index) => (\r\n            <TR\r\n              {...headerGroup.getHeaderGroupProps()}\r\n              className={`d-flex flex-row justify-content-between ${theme.dataTable.headerBorder}`}\r\n            >\r\n              {headerGroup.headers.map((column: any, index: number) => (\r\n                <Cells\r\n                  {...column.getSortByToggleProps()}\r\n                  cellClass={getHeaderCellClass(index)}\r\n                  {...column.getHeaderProps()}\r\n                  borderWidth={index === 0 ? \"0px\" : \"1px\"}\r\n                  fontWeight={true}\r\n                  borderColor=\"#e5e5e5\"\r\n                  key={index}\r\n                  borderHeight=\"48px\"\r\n                >\r\n                  <div\r\n                    {...column.getSortByToggleProps()}\r\n                    className=\"d-flex align-items-center w-100\"\r\n                  >\r\n                    <div>\r\n                      {index === 0 ||\r\n                      column.render(\"Header\").toLowerCase() ===\r\n                        \"seed fund startups\"\r\n                        ? column.render(\"Header\")\r\n                        : column\r\n                            .render(\"Header\")\r\n                            .split(\" \")\r\n                            .map((item: string) => <div>{item}</div>)}\r\n                    </div>\r\n                    <div>\r\n                      {column.isSorted ? (\r\n                        column.isSortedDesc ? (\r\n                          <ArrowDropDownIcon fontSize=\"small\" />\r\n                        ) : (\r\n                          <ArrowDropUpIcon fontSize=\"small\" />\r\n                        )\r\n                      ) : (\r\n                        <span className=\"d-flex flex-column p-0\">\r\n                          <ArrowDropUpIcon\r\n                            fontSize=\"small\"\r\n                            style={{ marginBottom: \"-7px\" }}\r\n                          />\r\n                          <ArrowDropDownIcon\r\n                            fontSize=\"small\"\r\n                            style={{ marginTop: \"-7px\" }}\r\n                          />\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Cells>\r\n              ))}\r\n            </TR>\r\n          ))}\r\n        </thead>\r\n        <div className=\"mt-3 mb-2\" style={{ maxWidth: \"21rem\" }}>\r\n          <SearchBarComponent\r\n            background={theme.dataTable.searchBg}\r\n            borderRadius=\"4px\"\r\n            onChange={onSearch}\r\n            value={searchQuery}\r\n            placeholder={\"Search By State\"}\r\n            placeholderClass={`search-bar-placeholder-data-table ${theme.dataTable.inputClass}`}\r\n            inputClass={`${theme.dataTable.searchBorderClass} radius-5 me-3`}\r\n          />\r\n        </div>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.slice(0, noOfItemsRender).map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr\r\n                {...row.getRowProps()}\r\n                className={`d-flex bg-white mt-2 flex-row justify-content-between radius-5 w-100 ${theme.dataTable.bodyClass}`}\r\n              >\r\n                {row.cells.map((cell: any, index: number) => {\r\n                  return (\r\n                    <>\r\n                      <Cells\r\n                        {...cell.getCellProps()}\r\n                        maxWidth=\"auto\"\r\n                        cellClass={getHeaderCellClass(index)}\r\n                        borderHeight=\"2.5rem\"\r\n                        key={index}\r\n                        borderWidth={index !== 0 ? \"1px\" : \"0px\"}\r\n                        fontWeight={index === 0}\r\n                        borderColor=\"#e5e5e5\"\r\n                        textRight={true}\r\n                      >\r\n                        {cell.render(\"Cell\")}\r\n                      </Cells>\r\n                    </>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    \r\n      {\r\n        <div\r\n          style={{\r\n            visibility:\r\n            renderedData.length > 6 && renderedData.length !== memorisedValue.length\r\n                ? \"visible\"\r\n                : \"hidden\",\r\n          }}\r\n          className=\"my-4 data-table-view-more-button text-theme\"\r\n          onClick={handleViewMore}\r\n        >\r\n          View More&gt;&gt;\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableContainer;\r\n","import React, { useContext, useEffect, useMemo } from \"react\";\r\nimport TableContainer from \"../../components/ReactTable/TableContainer\";\r\nimport { ThemeContext } from \"../../config/context\";\r\n\r\nconst startupLoops: any[] = [\r\n  \"Startup\",\r\n  \"PatentStartup\",\r\n  \"SeedFundStartup\",\r\n  \"ShowcasedStartups\",\r\n  \"DpiitCertified\",\r\n  \"WomenLed\",\r\n];\r\n\r\nconst mentorsLoop: any[] = [\r\n  \"Mentor\",\r\n  \"Incubator\",\r\n  \"Investor\",\r\n  \"Accelerator\",\r\n  // \"GovernmentBody\",\r\n];\r\n\r\nfunction DataTableComponent(props: any) {\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const { fetch, state, loading, appliedFilters } = props\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"States\",\r\n        accessor: \"name\",\r\n      },\r\n      {\r\n        Header: \"Total Startups\",\r\n        accessor: \"statistics.Startup\",\r\n      },\r\n      {\r\n        Header: \"Patent Startup\",\r\n        accessor: \"statistics.PatentStartup\",\r\n      },\r\n      {\r\n        Header: \"Seed Fund Startups\",\r\n        accessor: \"statistics.SeedFundStartup\",\r\n      },\r\n      {\r\n        Header: \"Showcased Startups\",\r\n        accessor: \"statistics.ShowcasedStartups\",\r\n      },\r\n      {\r\n        Header: \"DPIIT Recognised\",\r\n        accessor: \"statistics.DpiitCertified\",\r\n      },\r\n      {\r\n        Header: \"Women Owned\",\r\n        accessor: \"statistics.WomenLed\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  const columns2 = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"States\",\r\n        accessor: \"name\",\r\n      },\r\n      {\r\n        Header: \"Mentors\",\r\n        accessor: \"statistics.Mentor\",\r\n      },\r\n      {\r\n        Header: \"Incubator\",\r\n        accessor: \"statistics.Incubator\",\r\n      },\r\n      {\r\n        Header: \"Investors\",\r\n        accessor: \"statistics.Investor\",\r\n      },\r\n      {\r\n        Header: \"Accelerator\",\r\n        accessor: \"statistics.Accelerator\",\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetch( \r\n      {\r\n        ...appliedFilters,\r\n        states: undefined,\r\n        badges: undefined,\r\n        counts: undefined,\r\n        registrationFrom: undefined,\r\n        registrationTo: undefined,\r\n      });\r\n  }, [appliedFilters.stages, appliedFilters.industries, appliedFilters.sectors]);\r\n  return (\r\n    <div className=\"ms-3 mt-3\">\r\n      <TableContainer\r\n        columns={columns}\r\n        bodyData={(state.data) || []}\r\n        loop={startupLoops}\r\n        mentorsTable={false}\r\n      />\r\n      <TableContainer\r\n        columns={columns2}\r\n        bodyData={(state.data) || []}\r\n        loop={mentorsLoop}\r\n        mentorsTable={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default React.memo(DataTableComponent);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const TR = styled.tr`\r\n  background: ${(props) => props.theme.bgCards};\r\n  color: ${(props) => props.theme.colorCards};\r\n  overflow: hidden;\r\n  width: 100%;\r\n`;\r\n\r\nexport const TH = styled.th<any>`\r\n  background: ${(props) => props.theme.bgCards};\r\n  color: ${(props) => props.theme.colorCards};\r\n  position: relative;\r\n`;\r\n\r\nexport const IconSpan = styled.span`\r\n  background: ${(props) => props.theme.searchBg};\r\n  border-radius: 4px;\r\n  padding-left: 1.3rem !important;\r\n  color: ${(props) => props.theme.color};\r\n`;\r\n\r\nexport const Input = styled.input`\r\nbackground: ${(props) => props.theme.searchBg};\r\nborder-radius: 4px;\r\nborder: 0px;\r\ncolor: ${(props) => props.theme.color} !important;\r\nfont-family: Montserrat !important;\r\nfont-Size: 14px !important;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"../../config/context\";\r\nimport { TH } from \"./styled\";\r\nimport { CellsType } from \"./types\";\r\n\r\nconst Cells = ({\r\n  children,\r\n  borderWidth,\r\n  borderStyle,\r\n  borderColor,\r\n  background,\r\n  borderHeight,\r\n  fontWeight,\r\n  cellClass,\r\n  maxWidth,\r\n  onClick,\r\n  textRight,\r\n}: CellsType) => {\r\n  const theme = useContext(ThemeContext);\r\n  const borderWidthA = borderWidth ? borderWidth : \"0.1rem\";\r\n  const borderStyleA = borderStyle ? \"solid\" : \"solid\";\r\n  const borderColorA = borderColor ? borderColor : theme.dataTable.dashedBorder;\r\n  const borderLeftA = `${borderWidthA} ${borderStyleA} ${borderColorA}`;\r\n  return (\r\n    <TH onClick={onClick} className={cellClass}>\r\n      <div\r\n        style={{\r\n          minHeight: borderHeight ? borderHeight : \"63px\",\r\n          borderLeft: borderLeftA,\r\n          position: \"absolute\",\r\n        }}\r\n      />\r\n      <div\r\n        style={{ minHeight: borderHeight ? borderHeight : \"43px\" }}\r\n        className={`d-flex h-100 ${\r\n          textRight && !fontWeight ? \"justify-content-end\" : \"\"\r\n        }`}\r\n      >\r\n        <p\r\n          className=\"my-0 p-0 d-flex align-items-center font-mont-data-table pe-3\"\r\n          style={{\r\n            marginLeft: \"0.8rem\",\r\n            color: theme.dataTable.textColor,\r\n            fontWeight: fontWeight ? 700 : 500,\r\n          }}\r\n        >\r\n          {children}\r\n        </p>\r\n      </div>\r\n    </TH>\r\n  );\r\n};\r\n\r\nexport default Cells;\r\n","import { GoSearch } from \"react-icons/go\";\r\nimport styled from \"styled-components\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { ThemeContext } from \"../../config/context\";\r\nimport { IconSpan, Input } from \"./styled\";\r\nimport { SearchTypes } from \"./types\";\r\nimport \"../../scss/searchBarComponent.scss\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function Search({\r\n  background,\r\n  borderRadius,\r\n  placeholderClass,\r\n  inputClass,\r\n  onChange,\r\n  value,\r\n  placeholder,\r\n}: SearchTypes) {\r\n  const theme = useContext(ThemeContext);\r\n  const [searchQuery, setSearchQuery] = useState<string>();\r\n  const borderRadiusAll = borderRadius ? borderRadius : \"0px\";\r\n  const backgroundAll = background ? background : \"#f8f8f8\";\r\n\r\n  // Debouncing functionality for making call of api on liited times\r\n  useEffect(() => {\r\n    let delayDebounceFn: any;\r\n    if (searchQuery !== \"\" && searchQuery !== undefined) {\r\n      delayDebounceFn = setTimeout(() => {\r\n        onChange(searchQuery);\r\n      }, 100);\r\n    } else {\r\n      clearTimeout(delayDebounceFn);\r\n      onChange('');\r\n    }\r\n    return () => clearTimeout(delayDebounceFn);\r\n  }, [searchQuery]);\r\n\r\n  return (\r\n    <div className=\"mt-3 mb-2\" style={{ maxWidth: \"22rem\" }}>\r\n      <div className=\"row d-flex flex-row justify-content-center align-items-center search-bar-comman-component m-0\">\r\n        <div\r\n          className=\"search input-group px-0 d-flex flex-nowrap\"\r\n          style={{\r\n            borderTopLeftRadius: borderRadiusAll,\r\n            borderBottomLeftRadius: borderRadiusAll,\r\n          }}\r\n        >\r\n          <div className={`d-flex w-60 ${inputClass}`}>\r\n            <IconSpan\r\n              className=\"btn search-icon\"\r\n              style={{ background: backgroundAll }}\r\n            >\r\n              <GoSearch style={{ marginTop: \"-2px\" }} />\r\n            </IconSpan>\r\n            <Input\r\n              type=\"text\"\r\n              className={`form-control me-3 px-0 search-input shadow-none search-bar-placeholder ${placeholderClass}`}\r\n              placeholder={placeholder ? placeholder : \"Search\"}\r\n              style={{\r\n                background: backgroundAll,\r\n                color: \"black\",\r\n                borderTopRightRadius: borderRadiusAll,\r\n                borderBottomRightRadius: borderRadiusAll                \r\n              }}\r\n              onChange={(e: any) => setSearchQuery(e.target.value)}\r\n              value={searchQuery}\r\n            />\r\n          </div>\r\n          {/* <button\r\n            onClick={() => onChange(searchQuery)}\r\n            className=\"btn btn-primary btn-radius search-btn background-color-theme\"\r\n            style={{\r\n              fontFamily: \"Montserrat\",\r\n              paddingTop: \"7px\",\r\n              fontWeight: 600,\r\n            }}\r\n          >\r\n            Search\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}